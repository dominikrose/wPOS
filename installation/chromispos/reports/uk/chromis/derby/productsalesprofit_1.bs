//   Chromis POS - The New Face of Open Source POS 
//   Copyright (c) 2015 Chromis , previous uniCenta & Openbravo POS works   
//
//   This file is part of chromis oPOS
//
//   Chromis POS is free software: you can redistribute it and/or modify
//   it under the terms of the GNU General Public License as published by
//   the Free Software Foundation, either version 3 of the License, or
//   (at your option) any later version.
//
//   Chromis POS is distributed in the hope that it will be useful,
//   but WITHOUT ANY WARRANTY; without even the implied warranty of
//   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//   GNU General Public License for more details.
//
//   You should have received a copy of the GNU General Public License
//   along with Chromis POS.  If not, see <http://www.gnu.org/licenses/>.
//		added by g.irura @ 27/03/2010. 
// 		CALCULATES PROFIT FOR EACH ITEM THAT IS SOLD AS WELL AS QUANTITY OF ITEMS OCCURRING IN THE PARTICULAR SALE
//		IF A PRICE ADJUSTMENT OCCURS, IT IS REFLECTED IN THE TRAIL OF RECEIPTS ON DATES. THE REPORT ALSO SHOWS THE TOTAL PROFITS MADE ON PRODUCTS/SERVICES SOLD

report = new uk.chromis.pos.reports.PanelReportBean();

report.setTitleKey("Menu.SalesProfit");
report.setReport("/uk/chromis/reports/productsalesprofit");
report.setResourceBundle("uk/chromis/reports/productsalesprofit_messages");

// Amend: Janar Nagel Jan 2014
  
  

report.setSentence("SELECT " +
    "PRODUCTS.NAME, " +
    "IFNULL((SELECT CODE FROM PRODUCTS WHERE ID = TICKETLINES.PRODUCT),'-') AS CODE, " +
        " TICKETS.TICKETID,  " +
        "RECEIPTS.DATENEW AS DATE, " +
    "IFNULL(CAST((SELECT NAME FROM PRODUCTS WHERE ID = TICKETLINES.PRODUCT) AS CHAR(10000) CHARACTER SET utf8), " +
        "CAST(CONCAT(SUBSTR(TICKETLINES.ATTRIBUTES, " +
        "LOCATE('PRODUCT.NAME', TICKETLINES.ATTRIBUTES) + 14, " +
        "(LOCATE('%</entry>', TICKETLINES.ATTRIBUTES)-LOCATE('PRODUCT.NAME', TICKETLINES.ATTRIBUTES)-14)),'%') AS CHAR(10000) CHARACTER SET utf8)) AS NAME, " +
    "IFNULL((SELECT PRICEBUY FROM PRODUCTS WHERE ID = TICKETLINES.PRODUCT),0) AS PRICEBUY, " +
        "TICKETLINES.PRICE AS PRICESELL, " +
        "(TICKETLINES.UNITS) AS UNITSSOLD, " +
        "(TICKETLINES.UNITS*TICKETLINES.PRICE) AS TOTAL, " +
        "(TICKETLINES.UNITS*(TICKETLINES.PRICE-IFNULL((SELECT PRICEBUY FROM PRODUCTS WHERE ID = TICKETLINES.PRODUCT),0))) AS PROFITLOSS " +
    "FROM PRODUCTS, TICKETLINES " +
        "LEFT JOIN TICKETS ON TICKETS.ID = TICKETLINES.TICKET " +
        "LEFT JOIN RECEIPTS ON RECEIPTS.ID = TICKETS.ID " +
    "WHERE ?(QBF_FILTER) " +
    "ORDER BY PRODUCTS.NAME, RECEIPTS.DATENEW DESC");

report.addParameter("RECEIPTS.DATENEW");
report.addParameter("RECEIPTS.DATENEW");

paramdates = new uk.chromis.pos.reports.JParamsDatesInterval();

paramdates.setStartDate(uk.chromis.beans.DateUtils.getToday());
paramdates.setEndDate(uk.chromis.beans.DateUtils.getTodayMinutes());

report.addQBFFilter(paramdates);

report.addField("CODE", uk.chromis.data.loader.Datas.STRING);
report.addField("TICKETID", uk.chromis.data.loader.Datas.INT);
report.addField("DATE", uk.chromis.data.loader.Datas.TIMESTAMP);
report.addField("NAME", uk.chromis.data.loader.Datas.STRING);
report.addField("PRICEBUY", uk.chromis.data.loader.Datas.DOUBLE);
report.addField("PRICESELL", uk.chromis.data.loader.Datas.DOUBLE);
report.addField("UNITSSOLD", uk.chromis.data.loader.Datas.DOUBLE);
report.addField("TOTAL", uk.chromis.data.loader.Datas.DOUBLE);
report.addField("PROFITLOSS", uk.chromis.data.loader.Datas.DOUBLE);

report;